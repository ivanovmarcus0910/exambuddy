package com.example.exambuddy.service;

import com.example.exambuddy.model.ReportRequest;
import com.google.api.core.ApiFuture;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.FieldValue;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.Query;
import com.google.cloud.firestore.QuerySnapshot;
import com.google.firebase.cloud.FirestoreClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;

@Service
public class MessageService {

    private static final Firestore db = FirestoreClient.getFirestore();

    // Autowire PostService ƒë·ªÉ c√≥ th·ªÉ g·ªçi h√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i b√†i ƒëƒÉng
    @Autowired
    private PostService postService;

    public void saveReport(ReportRequest request) {
        System.out.println("üîç request.getReasons() = " + request.getReason());
        Map<String, Object> reportData = new HashMap<>();
        reportData.put("postId", request.getPostId());
        reportData.put("reason", request.getReason());
        reportData.put("description", request.getDescription());
        reportData.put("reporter", request.getReporter()); // Ng∆∞·ªùi b√°o c√°o
        reportData.put("timestamp", FieldValue.serverTimestamp());


        // G·ª≠i d·ªØ li·ªáu l√™n Firestore
        ApiFuture<DocumentReference> future = db.collection("report").add(reportData);
        try {
            DocumentReference document = future.get(); // Ch·ªù ƒë·∫øn khi Firestore l∆∞u xong
            System.out.println("B√°o c√°o ƒë√£ ƒë∆∞·ª£c l∆∞u v·ªõi ID: " + document.getId());

            // Sau khi l∆∞u b√°o c√°o, ki·ªÉm tra s·ªë l∆∞·ª£ng b√°o c√°o cho b√†i ƒëƒÉng n√†y
            Query query = db.collection("report").whereEqualTo("postId", request.getPostId());
            ApiFuture<QuerySnapshot> querySnapshotFuture = query.get();
            int reportCount = querySnapshotFuture.get().size(); // S·ªë l∆∞·ª£ng b√°o c√°o

            System.out.println("S·ªë l∆∞·ª£ng b√°o c√°o c·ªßa b√†i ƒëƒÉng " + request.getPostId() + " l√†: " + reportCount);

            // N·∫øu s·ªë l∆∞·ª£ng b√°o c√°o >= 3, t·ª± ƒë·ªông v√¥ hi·ªáu h√≥a b√†i ƒëƒÉng
            if (reportCount >= 3) {
                postService.updatePostStatus(request.getPostId(), false);
                System.out.println("B√†i ƒëƒÉng " + request.getPostId() + " ƒë√£ ƒë∆∞·ª£c v√¥ hi·ªáu h√≥a do qu√° nhi·ªÅu b√°o c√°o.");
            }
        } catch (InterruptedException | ExecutionException e) {
            System.err.println("L·ªói khi l∆∞u b√°o c√°o: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
